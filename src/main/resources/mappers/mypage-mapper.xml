<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypage">
<!-- mypage_addr_add -->
 	<insert id="addrinsert" parameterType="avo">
	insert into shop_addr( user_idx,addr_name, addr_phone, addr_addr,addr_base)
	values(#{user_idx}, #{addr_name}, #{addr_phone}, #{addr_addr},0)
	</insert>
	
<!-- mypage_addr_edit --> 
	<select id="addrdetail" parameterType="String" resultType="avo">
		select *
		from shop_addr
		where addr_idx= #{ addr_idx}
	</select>
	<update id="addredit" parameterType="avo">
	update shop_addr 
		set addr_name = #{addr_name}
		, addr_phone = #{addr_phone}
		, addr_addr = #{addr_addr}
		where addr_idx = #{addr_idx}
	</update>
		
	<select id ="myaddrlist" parameterType="String" resultType="avo">
		SELECT a.*
		  from shop_addr a
		 where  a.user_idx = #{user_idx}
		 		order by a.addr_base desc
	</select>
	<delete id="addrdelete" parameterType="String">
	    delete from shop_addr where addr_idx = #{addr_idx}
	</delete>
	<delete id="addrdelete1" parameterType="String">
	    delete from shop_addr where addr_idx = #{addr_idx} and addr_base = 1
	</delete>



<!-- mypage_changepwd, mypage_firstchk --> 
	<select id="firstchek" parameterType="uvo" resultType="uvo">
		select user_pwd from shop_user where user_id = #{user_id}
	</select>
		
<!-- mypage_changepwd --> 
	<update id="changepwd" parameterType="uvo">
		update shop_user set user_pwd = #{user_pwd} where user_id = #{user_id}
	</update>
	
<!-- mypage_faq --> 	

<!-- mypage_heart --> 
 	<select id="heartlist" resultType="ovo">
     select *
        from shop_heart h
        inner join shop_user u on u.user_idx = h.user_idx
        inner join shop_product p on h.product_idx = p.product_idx
        where h.user_idx=#{user_idx} and h.heart_active=1
        order by heart_idx
    </select>
    <insert id="cartlistadd" parameterType="ovo">
	insert into shop_cartlist(user_idx, product_idx, cartlist_number, cartlist_count)
	values(#{user_idx}, #{product_idx}, #{product_price}, 1)
	</insert>
		<update id="reset_pwd" parameterType="uvo">
		update shop_user
		set user_pwd = #{user_pwd}
		where user_id = #{user_id}
	</update>
	<delete id="MypageRemoveHeart" parameterType="Map">
	delete from shop_heart where heart_idx=#{heart_idx}
	</delete>
	
	<insert id="MypageAddHeart" parameterType="Map" >
    insert into shop_heart(user_idx, product_idx) 
    values(#{user_idx}, #{product_idx})
	</insert> 

	
	
<!-- mypage_info --> 	
	<update id="Mypage_Info_Change" parameterType="uvo">
		update shop_user
		set user_phone = #{user_phone}, user_email = #{user_email}, user_addr = #{user_addr}
		where user_id = #{user_id} 
	</update>
<!-- mypage_notice --> 	

<!-- mypage_order_after --> 	

<!-- mypage_order --> 	
	  <select id="productlist" resultType="pvo" parameterType="String">
		select * from shop_product  
		where product_idx = #{product_idx}
	</select>
	
	<select id="getdeliveryStatus" parameterType="String" resultType="int">
	     SELECT count(1) FROM shop_order WHERE (NOW() - #{order_regdate} = 3);
	</select>
	
	
	<update id="orderupdate1" parameterType="String">
	update shop_order
	set order_status = 1
	where order_idx = #{order_idx} 
	</update>	
	
	<update id="orderupdate2" parameterType="String">
	update shop_order
	set order_status = 2
	where order_idx = #{order_idx} 
	</update>
	
	<update id="orderupdate3" parameterType="String">
	update shop_order
	set order_status = 3
	where order_idx = #{order_idx} 
	</update>
	<update id="orderupdate4" parameterType="String">
	update shop_order
	set order_status = 4, order_regdate =now()
	where order_idx = #{order_idx} 
	</update>
	
	<select id="orderaddrproduct"  resultType="ovo"  parameterType="String">
		SELECT *  from shop_order o
			INNER join shop_user u on u.user_idx = o.user_idx
			INNER join shop_addr a on a.user_idx = a.user_idx AND o.addr_idx = a.addr_idx
			INNER join shop_product p on p.product_idx = o.product_idx
			where o.order_idx=#{order_idx}
	</select>
	
    <select id="orderlist" resultType="ovo"> 
    select * from shop_user u
     inner join shop_order o on u.user_idx = o.user_idx 
     inner join shop_product p on o.product_idx = p.product_idx 
     where u.user_idx = #{user_idx} and (o.order_status = 1 or o.order_status =2 or o.order_status =3)
     order by o.order_idx desc
     </select>
     
     <select id="orderlist2" resultType="ovo"> 
    select * from shop_user u
     inner join shop_order o on u.user_idx = o.user_idx 
     inner join shop_product p on o.product_idx = p.product_idx 
     where u.user_idx = #{user_idx} and o.order_status = 4
     </select>
     
     <update id="deliveryStatus" parameterType="ovo">
		 UPDATE shop_order
		    SET order_status = 
		        CASE 
		            WHEN to_char(now(), 'yyyymmdd') - to_char(order_regdate, 'yyyymmdd') = 6 THEN 4
		            WHEN to_char(now(), 'yyyymmdd') - to_char(order_regdate, 'yyyymmdd') = 3 THEN 3
		            WHEN to_char(now(), 'yyyymmdd') - to_char(order_regdate, 'yyyymmdd') = 2 THEN 2
		            WHEN to_char(now(), 'yyyymmdd') - to_char(order_regdate, 'yyyymmdd') = 1 THEN 1
		            ELSE order_status
		        END
     </update>
<!--      <select id="deliveryStatus" parameterType="ovo" resultType="ovo">
     	select * from shop_order where (now()-#{order_regdate} > 3);
     </select> -->
     
<!-- mypage_pwdchk --> 	

<!-- mypage_qna_update --> 	

<!-- mypage_qna_write --> 	

<!-- mypage_qna --> 	

<!-- mypage_stack/find_id -->
	<select id="user_id" parameterType="String" resultType="uvo">
		select * from shop_user where user_id = #{user_id} 
	</select>
</mapper>