<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">
<!-- cart_list -->
		<select id ="addrlist" parameterType="ovo" resultType="ovo">
		SELECT a.*
		,  o.order_idx
		  from shop_addr a
		  , shop_order o
		 where
		 a.user_idx = o.user_idx 
		 AND a.user_idx = #{user_idx}
		 AND o.order_idx = #{order_idx}
		 		order by a.addr_base desc
	</select>
	<select id="cartlist" parameterType="String" resultType="cvo">
 		select * from shop_cartlist 
 		join shop_product on shop_product.product_idx = shop_cartlist.product_idx
 		where shop_cartlist.user_idx = #{user_idx} 
 	</select>
	<delete id="cartlist_delete" parameterType="String">
 		delete from shop_cartlist where cartlist_idx = #{cartlist_idx} 
 	</delete>
 	<update id="cartlist_edit" parameterType="cvo">
 		update shop_cartlist set cartlist_count = #{cartlist_count} where cartlist_idx = #{cartlist_idx}
 	</update>
 	<insert id="cartlist_pass" parameterType="cvo" >
 		insert into shop_order(order_idx, user_idx, product_idx, addr_idx, order_count, order_number, order_regdate,order_date)
 		values(#{order_idx},#{user_idx}, #{product_idx}, #{addr_idx}, #{cartlist_count}, #{order_number}, sysdate(),sysdate())
 	</insert> 
 	<select id="cartlist_select" parameterType="String" resultType="cvo">
 		select * from shop_cartlist 
 		join shop_product on shop_product.product_idx = shop_cartlist.product_idx 
 		where cartlist_idx = #{cartlist_idx} 
 	</select>
	<select id="cartlist_order_list" resultType="cvo">
 		select * from shop_order group by order_idx
 	</select>
	<select id="cartlist_addr" parameterType="String" resultType="cvo">
 		select * from shop_addr where user_idx = #{user_idx} and addr_base = 1;
 	</select>

<!-- order_pay -->
 	<select id="orderaddrproduct" parameterType="ovo" resultType="ovo">
		SELECT 
				o.user_idx, a.addr_name,a.addr_phone,a.addr_addr,addr_base, order_idx, 
		    	u.user_name, u.user_phone, p.product_name, p.product_price, o.order_count, o.order_idx 
		FROM 
				shop_order o
		INNER join shop_user u on u.user_idx = o.user_idx
		INNER join shop_addr a on o.user_idx = a.user_idx
		INNER join shop_product p on p.product_idx = o.product_idx
		WHERE o.order_idx=#{order_idx}
		AND u.user_idx = #{user_idx}
		AND a.addr_base=1
	</select>
	
	<update id="ordercheckmin" parameterType="avo">
		 update 
		 	shop_addr 
		set 
			addr_base = 0
		where 
		    user_idx = #{user_idx}
		    and addr_base = 1
	</update>
	
	<update id="ordercheck" parameterType="avo">
	update shop_addr 
		set addr_base = 1
		where addr_idx = #{addr_idx}
	</update>
	
	<update id="orderSuccess" parameterType="avo">
		 update 
		 	shop_order
		set 
			order_status = 1
		where 
		    order_idx = #{order_idx}
		    and order_status = 0
	</update>
	
	<!-- order_success -->
	<select id="odersuccess_page" parameterType="Map" resultType="ovo">
		select * from shop_order o
		join shop_user u on u.user_idx = o.user_idx
		join shop_addr a on o.addr_idx = a.addr_idx
		join shop_product p on p.product_idx = o.product_idx
		where o.order_idx=#{order_idx}
	</select>
	
	<update id="minus_point" parameterType="Map">
		update 
		 	shop_user
		set 
			user_point = user_point - #{order_total}
		where 
		    user_idx = #{user_idx}
	</update>
	
	
	
	
	
<!-- 
	<update id="orderadd" parameterType="String">
		update shop_addr set addr_name = #{addr_name}, addr_phone = #{addr_phone}, addr_addr = #{addr_addr} 
		where addr_idx = #{addr_idx}
	</update> -->
</mapper>

